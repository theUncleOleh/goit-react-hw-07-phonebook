{"version":3,"file":"static/js/53.5c33793c.chunk.js","mappings":"sKACA,MAAwB,2B,SCAT,SAASA,EAAT,GAAgC,IAATC,EAAQ,EAARA,KACpC,OAAO,eAAIC,UAAWC,EAAf,SAAyBF,M,0FCDlC,EAAyB,6B,SCEV,SAASG,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAIH,GACZ,IAAMI,GAAWC,EAAAA,EAAAA,MACjBH,QAAQC,IAAIC,GAIZ,OACE,mBAAQE,KAAK,SAASC,QAJE,WAAO,IAAD,IAC9BH,EAAQ,iBAACJ,QAAD,IAACA,GAAD,UAACA,EAAUQ,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,MAGgBZ,UAAWC,EAA7D,2B,oDCXJ,GAAgB,MAAQ,oBAAoB,KAAO,mBAAmB,OAAS,sB,mBCIhE,SAASY,EAAT,GAAwC,IAAxBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,UAWvC,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MACd,OAAQP,GACN,IAAK,OACHC,EAAQM,GACR,MACF,IAAK,QACHJ,EAASI,GACT,MACF,QACE,SAWAC,EAAmB,SAAAN,GAEvB,IADA,IAAMO,GAAK,OAAOP,GACTQ,EAAI,EAAGA,EAAID,EAAME,OAAS,EAAGD,GAAK,EACzCD,EAAMG,OAAOF,EAAG,EAAG,KAErB,OAAOD,EAAMI,KAAK,KAGdC,EAAQ,WACZb,EAAQ,IACRE,EAAS,KAGX,OACE,kBAAMN,SArBa,SAAAQ,GACnBA,EAAMU,iBACN,IAAMC,EAAYR,EAAiBN,GAEnCL,EADgB,CAAEG,KAAAA,EAAME,MAAOc,IAE/BF,KAgB8B/B,UAAWC,EAAAA,KAAzC,WACE,mBAAOiC,QAAQ,GAAGlC,UAAWC,EAAAA,MAA7B,kBAEE,kBACEkC,aAAa,MACbnC,UAAWC,EAAAA,MACXQ,KAAK,OACLQ,KAAK,OACLO,MAAOP,EACPmB,SAAUf,EACVgB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAIZ,mBAAOL,QAAQ,GAAGlC,UAAWC,EAAAA,MAA7B,oBAEE,kBACEkC,aAAa,MACbnC,UAAWC,EAAAA,MACXQ,KAAK,MACLQ,KAAK,QACLO,MAAOL,EACPiB,SAAUf,EACVgB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,mBAAQ9B,KAAK,SAAS+B,SAAUzB,EAAWf,UAAWC,EAAAA,OAAtD,SACGc,GACC,SAAC,IAAD,CAAa0B,OAAQ,GAAIC,MAAO,EAAGC,OAAQ,IAE3C,cCnFK,SAASC,EAAT,GAAmC,IAAbC,EAAY,EAAZA,SACnC,GAAiDC,EAAAA,EAAAA,MAAjD,eAAOC,EAAP,KAAmCC,EAAnC,KAAwBjC,UAClBkC,GAAazC,EAAAA,EAAAA,MAgBnB,OAAO,SAACK,EAAD,CAAMC,SAfO,SAAAoC,GAClB7C,QAAQC,IAAI4C,GACZ,IAAMC,EAAkBD,EAAQjC,KAAKmC,oBAMrC,GAJU,OAAGP,QAAH,IAAGA,OAAH,EAAGA,EAAUQ,MACrB,qBAAGpC,KAAgBmC,sBAAwBD,KAI3C,OAAOG,EAAAA,GAAAA,MAAA,UAAeJ,EAAQjC,KAAvB,4BAET8B,EAAcG,GACdI,EAAAA,GAAAA,QAAA,UAAiBJ,EAAQjC,KAAzB,4BACAgC,EAAW,MAEuBlC,UAAWiC,ICpBlC,SAASO,IACtB,OACE,iCACE,SAACzD,EAAA,EAAD,CAAaC,KAAK,eAClB,SAAC,EAAD,KACA,SAAC6C,EAAD","sources":["webpack://react-homework-template/./src/components/PageHeading/PageHeading.module.css?b132","components/PageHeading/PageHeading.jsx","webpack://react-homework-template/./src/components/ButtonToBack/ButtonToBack.module.css?0223","components/ButtonToBack/ButtonToBack.jsx","webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","components/AddContact/AddContact.jsx","pages/CreateContactPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"PageHeading_title__1wPIF\"};","import s from './PageHeading.module.css';\nexport default function PageHeading({ text }) {\n  return <h1 className={s.title}>{text}</h1>;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"ButtonToBack_button__uus7v\"};","import { useLocation, useNavigate } from 'react-router-dom';\nimport s from './ButtonToBack.module.css';\n\nexport default function BackToTrendButton() {\n  const location = useLocation();\n  console.log(location);\n  const navigate = useNavigate();\n  console.log(navigate);\n  const backToTrendButton = () => {\n    navigate(location?.state?.from ?? '/');\n  };\n  return (\n    <button type=\"button\" onClick={backToTrendButton} className={s.button}>\n      Previous page\n    </button>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Form_input__FTtTw\",\"form\":\"Form_form__e1yzW\",\"button\":\"Form_button__8NOIT\"};","import React, { useState } from 'react';\nimport s from './Form.module.css';\nimport ScaleLoader from 'react-spinners/ScaleLoader';\n\n// import { useAddContactMutation } from 'redux/contacts/itemsOperations';\nexport default function Form({ onSubmit, isLoading }) {\n  // const [addContacts] = useAddContactMutation();\n  // const handleSubmit = e => {\n  //   e.preventDefault();\n  //   const name = e.currentTarget.elements.name.value;\n  //   const phone = e.currentTarget.elements.number.value;\n  //   console.log(name);\n  //   console.log(phone);\n  //   addContacts({ name, phone });\n  //   e.currentTarget.reset();\n  // };\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const formPhone = numberFormatting(phone);\n    const contact = { name, phone: formPhone };\n    onSubmit(contact);\n    reset();\n  };\n  const numberFormatting = phone => {\n    const array = [...phone];\n    for (let i = 3; i < array.length - 1; i += 3) {\n      array.splice(i, 0, '-');\n    }\n    return array.join('');\n  };\n\n  const reset = () => {\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label htmlFor=\"\" className={s.label}>\n        Name\n        <input\n          autoComplete=\"off\"\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n\n      <label htmlFor=\"\" className={s.label}>\n        Number\n        <input\n          autoComplete=\"off\"\n          className={s.input}\n          type=\"tel\"\n          name=\"phone\"\n          value={phone}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" disabled={isLoading} className={s.button}>\n        {isLoading ? (\n          <ScaleLoader height={15} width={5} margin={2} />\n        ) : (\n          'Create'\n        )}\n      </button>\n    </form>\n  );\n}\n// class Form extends Component {\n//   state = {\n//     name: '',\n//     number: '',\n//     id: '',\n//   };\n\n//   handleChange = event => {\n//     const { name, value } = event.currentTarget;\n\n//     this.setState({\n//       [name]: value,\n//     });\n//   };\n\n//   handleSubmit = event => {\n//     event.preventDefault();\n//     this.props.onSubmit(this.state);\n//     console.log(this.state);\n//   };\n\n//   render() {\n//     return (\n//       <form onSubmit={this.handleSubmit} className={s.form}>\n//         <label htmlFor=\"\" className={s.label}>\n//           Name\n//           <input\n//             className={s.input}\n//             type=\"text\"\n//             name=\"name\"\n//             value={this.state.name}\n//             onChange={this.handleChange}\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//             title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//             required\n//           />\n//         </label>\n\n//         <label htmlFor=\"\" className={s.label}>\n//           Number\n//           <input\n//             className={s.input}\n//             onSubmit={this.handleSubmit}\n//             type=\"tel\"\n//             name=\"number\"\n//             value={this.state.number}\n//             onChange={this.handleChange}\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//             title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//             required\n//           />\n//         </label>\n//         <button type=\"submit\" className={s.button}>\n//           Add contact\n//         </button>\n//       </form>\n//     );\n//   }\n// }\n\n// export default Form;\n","import { useNavigate } from 'react-router-dom';\nimport { useAddContactMutation } from 'redux/contacts/itemsOperations';\nimport { toast } from 'react-toastify';\nimport Form from 'components/Form';\n\nexport default function AddContact({ contacts }) {\n  const [createContact, { isLoading: isCreate }] = useAddContactMutation();\n  const navigation = useNavigate();\n  const addContacts = contact => {\n    console.log(contact);\n    const toNormalizeName = contact.name.toLocaleLowerCase();\n\n    const name = contacts?.find(\n      ({ name }) => name.toLocaleLowerCase() === toNormalizeName\n    );\n\n    if (name) {\n      return toast.error(`${contact.name} is already in contacts`);\n    }\n    createContact(contact);\n    toast.success(`${contact.name} was added to contacts!`);\n    navigation('/');\n  };\n  return <Form onSubmit={addContacts} isLoading={isCreate} />;\n}\n","import PageHeading from 'components/PageHeading';\nimport ButtonToBack from 'components/ButtonToBack';\nimport AddContact from 'components/AddContact';\nexport default function CreateContactPage() {\n  return (\n    <>\n      <PageHeading text=\"Phonebook\" />\n      <ButtonToBack />\n      <AddContact />\n    </>\n  );\n}\n"],"names":["PageHeading","text","className","s","BackToTrendButton","location","useLocation","console","log","navigate","useNavigate","type","onClick","state","from","Form","onSubmit","isLoading","useState","name","setName","phone","setPhone","handleChange","event","target","value","numberFormatting","array","i","length","splice","join","reset","preventDefault","formPhone","htmlFor","autoComplete","onChange","pattern","title","required","disabled","height","width","margin","AddContact","contacts","useAddContactMutation","createContact","isCreate","navigation","contact","toNormalizeName","toLocaleLowerCase","find","toast","CreateContactPage"],"sourceRoot":""}